{"version":3,"sources":["../../../../src/lib/server/test/appUseOverride-test.js"],"names":["appUse","require","Understudy","assert","describe","it","done","middleware","originalUse","fn","push","express","use","call","perform","notStrictEqual","syncCounter","req","res","next","equal","length","setTimeout","before","ctx","name","Promise","resolve","reject","middlwareA"],"mappings":"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","sourcesContent":["\nconst appUse = require('../appUseOverride');\nconst Understudy = require('boring-understudy');\nconst assert = require('assert');\n\n\ndescribe('appUseOverride', function() {\n\n  it('will wrap app.use and is immediately invokeable', function(done) {\n\n    const middleware = [];\n    const originalUse = function(fn) {\n      middleware.push(fn);\n    }\n    const express = {\n      use: originalUse,\n    };\n\n    Understudy.call(express);\n\n    express.use = appUse(express, express.perform);\n    assert.notStrictEqual(originalUse, express.use);\n\n    let syncCounter = 0;\n    express.use(function(req, res, next) {\n      syncCounter++;\n      next();\n    });\n\n    assert.equal(middleware.length, 1);\n\n    middleware[0]({}, {}, () => {\n    });\n    setTimeout(() => {\n      assert.equal(syncCounter, 1, 'middleware should have been ran');\n      done();\n\n    }, 20);\n\n  });\n\n\n  it('will queue middleware calls until all before hooks are ran', function(done) {\n\n    const middleware = [];\n    const originalUse = function(fn) {\n      middleware.push(fn);\n    };\n    const express = {\n      use: originalUse,\n    };\n\n    Understudy.call(express);\n\n    express.use = appUse(express, express.perform);\n    assert.notStrictEqual(originalUse, express.use);\n\n    express.before('app.use', function(ctx) {\n      assert.equal(ctx.name, 'middlwareA', 'ensure name of middleware in ctx is name of funciton');\n\n      return new Promise(function(resolve, reject) {\n        setTimeout(resolve, 300);\n      });\n    });\n\n    let syncCounter = 0;\n    express.use('middlwareA', function middlwareA(req, res, next) {\n      syncCounter++;\n      next();\n    });\n    assert.equal(middleware.length, 1);\n\n    // run middleware\n    middleware[0]({}, {}, () => {});\n    assert.equal(syncCounter, 0, 'middleware should not have been ran');\n\n    setTimeout(() => {\n      assert.equal(syncCounter, 0, 'middleware should not have been ran, even after the event loop is done');\n    }, 0);\n\n    setTimeout(() => {\n      assert.equal(syncCounter, 0, 'middleware should not have been ran, even after some time but before the promise resovles');\n    }, 100);\n\n    setTimeout(() => {\n      assert.equal(syncCounter, 1, 'middleware should have been ran');\n      done();\n    }, 400);\n\n\n  });\n\n});\n"],"file":"appUseOverride-test.js"}