{"version":3,"sources":["../../../src/lib/server/index.js"],"names":["config","require","logger","paths","util","InitPipeline","startExpress","app","port","listen","promisify","BoringServer","constructor","start","options","injections","build","Object","assign","webpack_config","boring_webpack_dev_config","get","perform","info","module","exports"],"mappings":";;AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAAtB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMI,YAAY,GAAGJ,OAAO,CAAC,kBAAD,CAA5B;;AAEA,eAAeK,YAAf,CAA4BC,GAA5B,EAAiCC,IAAjC,EAAuC;AACrCD,EAAAA,GAAG,CAACE,MAAJ,GAAaL,IAAI,CAACM,SAAL,CAAeH,GAAG,CAACE,MAAnB,CAAb;AACA,SAAOF,GAAG,CAACE,MAAJ,CAAWD,IAAX,CAAP;AACD;;AAED,MAAMG,YAAN,SAA2BN,YAA3B,CAAwC;AACtCO,EAAAA,WAAW,GAAG;AACZ;AACD;;AAED,QAAMC,KAAN,CAAYC,OAAZ,EAAqB;AAEnB,UAAMC,UAAU,GAAG,MAAM,KAAKC,KAAL,CAAWC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AACpDC,MAAAA,cAAc,EAAElB,OAAO,CAACE,KAAK,CAACiB,yBAAP;AAD6B,KAAlB,EAEjCN,OAFiC,CAAX,CAAzB;AAIA,UAAMN,IAAI,GAAGR,MAAM,CAACqB,GAAP,CAAW,iBAAX,CAAb;AACAN,IAAAA,UAAU,CAACP,IAAX,GAAkBA,IAAlB;AAEA,WAAO,MAAM,KAAKc,OAAL,CAAa,QAAb,EAAuBP,UAAvB,EAAmC,YAAW;AACzD,YAAMT,YAAY,CAAC,KAAKC,GAAN,EAAWC,IAAX,CAAlB;AACAN,MAAAA,MAAM,CAACqB,IAAP,CAAY,uBAAuBf,IAAnC;AAEA,aAAOO,UAAP;AACD,KALY,CAAb;AAOD;;AArBqC;;AAwBxCS,MAAM,CAACC,OAAP,GAAiBd,YAAjB","sourcesContent":["const config = require('boring-config');\r\nconst logger = require('boring-logger');\r\nconst paths = require('paths');\r\nconst util = require('util');\r\nconst InitPipeline = require('../init-pipeline');\r\n\r\nasync function startExpress(app, port) {\r\n  app.listen = util.promisify(app.listen);\r\n  return app.listen(port);\r\n}\r\n\r\nclass BoringServer extends InitPipeline {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  async start(options) {\r\n\r\n    const injections = await this.build(Object.assign({}, {\r\n      webpack_config: require(paths.boring_webpack_dev_config)\r\n    }, options));\r\n\r\n    const port = config.get('boring.app.port');\r\n    injections.port = port;\r\n    \r\n    return await this.perform('listen', injections, async() => {\r\n      await startExpress(this.app, port);\r\n      logger.info('Listening on port ' + port);\r\n  \r\n      return injections;\r\n    })\r\n   \r\n  }\r\n}\r\n\r\nmodule.exports = BoringServer"],"file":"index.js"}