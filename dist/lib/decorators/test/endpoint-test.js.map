{"version":3,"sources":["../../../../src/lib/decorators/test/endpoint-test.js"],"names":["assert","require","logger","Emitter","injecture","describe","endpoint_decortators","beforeEach","it","done","endpoint","get","middleware","post","entrypoint","getMetaDataByClass","Meow","bark","meow","classMetaData","metadata","equal","path","endpoints","methods","handler","prototype","screetch","stopper","subscribeDecorators","emitter1","wildcard","emitterCollecter1","on","args","push","eventName","event","Class1","Class2","length","instances","allInstances","ok","indexOf","Clazz","beep","console","log","clazz","addMiddlewareDecorator","fn","newDecorator"],"mappings":"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","sourcesContent":["const assert = require('assert');\r\nconst logger = require('boring-logger');\r\nconst Emitter = require('eventemitter2');\r\nconst injecture = require('injecture');\r\n\r\ndescribe('Endpoint decorator', function() {\r\n\r\n  let endpoint_decortators;\r\n\r\n  beforeEach(() => {\r\n    endpoint_decortators = require('../router');\r\n  })\r\n  \r\n\r\n  it('will push a prop into the class prototype', done => {\r\n    const { endpoint, get, middleware, post, entrypoint, getMetaDataByClass} = endpoint_decortators;\r\n\r\n    @endpoint('/foo')\r\n    class Meow {\r\n\r\n      @get('/beep')\r\n      bark() {\r\n\r\n      }\r\n\r\n      @get('/boop') \r\n      meow() {\r\n\r\n      }\r\n    }\r\n\r\n\r\n    const classMetaData = getMetaDataByClass(Meow).metadata;\r\n    assert.equal(classMetaData.path, '/foo');\r\n    assert.equal(classMetaData.endpoints.bark.path, '/beep');\r\n    assert.equal(classMetaData.endpoints.bark.methods.get.handler, Meow.prototype.bark);\r\n    assert.equal(classMetaData.endpoints.meow.path, '/boop');\r\n    assert.equal(classMetaData.endpoints.meow.methods.get.handler, Meow.prototype.meow);\r\n    done();\r\n  });\r\n\r\n  \r\n  it('will combine annotations into the metadata', done => {\r\n    const { endpoint, get, middleware, post, entrypoint, getMetaDataByClass} = endpoint_decortators;\r\n\r\n    @endpoint('/bar')\r\n    class Meow {\r\n\r\n      @get('/beep')\r\n      @middleware('meep')\r\n      @entrypoint('foo_client.js')\r\n      screetch() {\r\n\r\n      }\r\n\r\n      @post('/beep')\r\n      stopper() {\r\n\r\n      }\r\n    }\r\n\r\n    const classMetaData = getMetaDataByClass(Meow).metadata;\r\n    assert.equal(classMetaData.endpoints.screetch.middleware[0], 'meep');\r\n    assert.equal(classMetaData.endpoints.screetch.path, '/beep');\r\n    assert.equal(classMetaData.endpoints.screetch.methods.get.handler, Meow.prototype.screetch);\r\n    assert.equal(classMetaData.endpoints.screetch.methods.get.entrypoint, 'foo_client.js')\r\n    assert.equal(classMetaData.endpoints.stopper.methods.post.handler, Meow.prototype.stopper);\r\n    done();\r\n  });\r\n\r\n\r\n  it('will reply all added decorated classes when a new emitter is added', done => {\r\n    const { endpoint, get, middleware, post, entrypoint, getMetaDataByClass, subscribeDecorators} = endpoint_decortators;\r\n\r\n    const emitter1 = new Emitter({wildcard: true});\r\n    const emitterCollecter1 = []\r\n    \r\n    emitter1.on('decorator.router.*', function(...args) {\r\n      emitterCollecter1.push({\r\n        eventName: this.event,\r\n        args\r\n      });\r\n    })\r\n    subscribeDecorators(emitter1);\r\n\r\n    @endpoint('/foo')\r\n    class Class1 {\r\n\r\n    }\r\n\r\n    \r\n    @endpoint('/bar')\r\n    class Class2 {\r\n      \r\n    }\r\n\r\n    assert.equal(emitterCollecter1.length, 2, 'There should be two classes that were created');\r\n\r\n    const instances = injecture.allInstances('decorator.router.endpoint');\r\n\r\n    assert.ok(instances.indexOf(Class1) >= 0);\r\n    assert.ok(instances.indexOf(Class2) >= 0);\r\n    done();\r\n\r\n  })\r\n\r\n  it('will ensure get is actually wrapped', done => {\r\n    const { endpoint, get, middleware, post, entrypoint, getMetaDataByClass, subscribeDecorators} = endpoint_decortators;\r\n\r\n    @endpoint('/foo')\r\n    class Clazz {\r\n\r\n      @get('/bar')\r\n      beep() {\r\n        console.log('beep');\r\n      }\r\n    }\r\n\r\n    const clazz = new Clazz();\r\n    clazz.beep();\r\n\r\n    done();\r\n  });\r\n\r\n  it('can add custom path based decorators', function(done) {\r\n\r\n    const { addMiddlewareDecorator } = endpoint_decortators;\r\n\r\n    addMiddlewareDecorator('newDecorator', function(fn) {\r\n\r\n    });\r\n\r\n    assert.ok(endpoint_decortators.middleware.newDecorator);\r\n\r\n    done();\r\n  });\r\n  \r\n});"],"file":"endpoint-test.js"}