{"version":3,"sources":["../../../../src/lib/init-modules/test/injecture-reducer-test.js"],"names":["assert","require","injectureDeps","describe","it","injecture","config","get","key","registerClass","ClassChevy","constructor","interfaces","singleton","ClassFord","ClassGM","ClassDog","ClassCat","carKey","getKeysByInterface","equal","length","animalKey"],"mappings":";;AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,aAAa,GAAGD,OAAO,CAAC,uCAAD,CAA7B;;AAEAE,QAAQ,CAAC,6BAAD,EAAgC,YAAW;AAEjDC,EAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAY;AAE5D,UAAMC,SAAS,GAAGJ,OAAO,CAAC,WAAD,CAAzB;;AACA,UAAMK,MAAM,GAAG;AACbC,MAAAA,GAAG,EAAE,UAASC,GAAT,EAAc;AACjB,YAAIA,GAAG,KAAK,mBAAZ,EAAiC,OAAO;AACtC,oBAAW,UAD2B;AAEtC,iBAAO;AAF+B,SAAP;AAIjC,YAAIA,GAAG,KAAK,YAAZ,EAA0B,OAAO;AAC/B,iBAAO,YADwB;AAE/B,sBAAY;AAFmB,SAAP;AAI3B;AAVY,KAAf;AAYAN,IAAAA,aAAa,CAAC;AACZG,MAAAA,SADY;AAEZC,MAAAA;AAFY,KAAD,CAAb;AAKAD,IAAAA,SAAS,CAACI,aAAV,CAAyB,MAAMC,UAAN,CAAiB;AACxCC,MAAAA,WAAW,GAAG,CACb;;AAFuC,KAA1C,EAGG;AACDC,MAAAA,UAAU,EAAE,CAAC,KAAD,CADX;AAEDC,MAAAA,SAAS,EAAE;AAFV,KAHH;AAQAR,IAAAA,SAAS,CAACI,aAAV,CAAyB,MAAMK,SAAN,CAAgB;AACvCH,MAAAA,WAAW,GAAG,CACb;;AAFsC,KAAzC,EAGG;AACDC,MAAAA,UAAU,EAAE,CAAC,KAAD,CADX;AAEDC,MAAAA,SAAS,EAAE;AAFV,KAHH;AAQAR,IAAAA,SAAS,CAACI,aAAV,CAAyB,MAAMM,OAAN,CAAc;AACrCJ,MAAAA,WAAW,GAAG,CACb;;AAFoC,KAAvC,EAGG;AACDC,MAAAA,UAAU,EAAE,CAAC,KAAD,CADX;AAEDC,MAAAA,SAAS,EAAE;AAFV,KAHH;AAQAR,IAAAA,SAAS,CAACI,aAAV,CAAyB,MAAMO,QAAN,CAAe;AACtCL,MAAAA,WAAW,GAAG,CACb;;AAFqC,KAAxC,EAGG;AACDC,MAAAA,UAAU,EAAE,CAAC,QAAD,CADX;AAEDC,MAAAA,SAAS,EAAE;AAFV,KAHH;AASAR,IAAAA,SAAS,CAACI,aAAV,CAAyB,MAAMQ,QAAN,CAAe;AACtCN,MAAAA,WAAW,GAAG,CACb;;AAFqC,KAAxC,EAGG;AACDC,MAAAA,UAAU,EAAE,CAAC,QAAD,CADX;AAEDC,MAAAA,SAAS,EAAE;AAFV,KAHH;AAQA,UAAMK,MAAM,GAAGb,SAAS,CAACc,kBAAV,CAA6B,KAA7B,CAAf;AACAnB,IAAAA,MAAM,CAACoB,KAAP,CAAaF,MAAM,CAACG,MAApB,EAA4B,CAA5B;AACArB,IAAAA,MAAM,CAACoB,KAAP,CAAaF,MAAM,CAAC,CAAD,CAAnB,EAAwB,YAAxB;AAGA,UAAMI,SAAS,GAAGjB,SAAS,CAACc,kBAAV,CAA6B,QAA7B,CAAlB;AACAnB,IAAAA,MAAM,CAACoB,KAAP,CAAaE,SAAS,CAACD,MAAvB,EAA+B,CAA/B;AACArB,IAAAA,MAAM,CAACoB,KAAP,CAAaE,SAAS,CAAC,CAAD,CAAtB,EAA2B,UAA3B;AAEH,GAtEC,CAAF;AAuED,CAzEO,CAAR","sourcesContent":["const assert = require('assert');\nconst injectureDeps = require('../managed_modules/injecture-reducers');\n\ndescribe('Injecture strategy reducers', function() {\n\n  it('will reduce an interface to one key by config', async () => {\n\n      const injecture = require('injecture');\n      const config = {\n        get: function(key) {\n          if (key === 'boring.strategies') return {\n            'animal' : 'ClassDog',\n            'car': 'ClassFord'\n          };\n          if (key === 'strategies') return {\n            'car': 'ClassChevy',\n            'computer': 'ClassMac'\n          }\n        }\n      }\n      injectureDeps({\n        injecture,\n        config\n      });\n\n      injecture.registerClass( class ClassChevy {\n        constructor() {\n        }\n      }, {\n        interfaces: ['car'],\n        singleton: true,\n      });\n\n      injecture.registerClass( class ClassFord {\n        constructor() {\n        }\n      }, {\n        interfaces: ['car'],\n        singleton: true,\n      });\n\n      injecture.registerClass( class ClassGM {\n        constructor() {\n        }\n      }, {\n        interfaces: ['car'],\n        singleton: true,\n      });\n\n      injecture.registerClass( class ClassDog {\n        constructor() {\n        }\n      }, {\n        interfaces: ['animal'],\n        singleton: true,\n      });\n\n\n      injecture.registerClass( class ClassCat {\n        constructor() {\n        }\n      }, {\n        interfaces: ['animal'],\n        singleton: true,\n      });\n\n      const carKey = injecture.getKeysByInterface('car');\n      assert.equal(carKey.length, 1);\n      assert.equal(carKey[0], 'ClassChevy');\n\n\n      const animalKey = injecture.getKeysByInterface('animal');\n      assert.equal(animalKey.length, 1);\n      assert.equal(animalKey[0], 'ClassDog');\n\n  });\n});"],"file":"injecture-reducer-test.js"}