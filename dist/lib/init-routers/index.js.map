{"version":3,"sources":["../../../src/lib/init-routers/index.js"],"names":["compose","require","module","exports","initRoutes","BoringInjections","boring","decorators","endpoint_meta","on","eventData","metadata","router","getMetaDataByClass","target","push","subscribeDecorators","instances","injecture","allInstances","forEach","Klass","moduleData","paths","boring_routers","server_routers","route_descriptors","concat","Object","keys","map","name","route","endpoints","endpoint","methods","method","wrapHandler","noop","req","res","next","getMiddlewareFunc","middleware","middlewareStack","normalizedMiddleware","func","args","curryWrapper","handler","wrappedHandler","url","path","ctx","perform","toLowerCase","Promise","resolve","reject","err","then","catch","e","logger","debug"],"mappings":"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","sourcesContent":["import paths from 'paths';\nimport requireInject from 'require-inject-all';\nimport logger from 'boring-logger';\nimport injecture from 'injecture';\nimport endpoint_transformer from './transform-annotation';\n//import * as decorators from '../decorators'\nconst compose = require('compose-middleware').compose;\n\n\nmodule.exports = async function initRoutes(BoringInjections) {\n  const {\n    boring,\n  } = BoringInjections;\n\n  const decorators = boring.decorators;\n\n  const endpoint_meta = [];\n\n  /**\n   * !IMPORTANT!\n   *\n   * First, we *must* subscribe the decorators to boring's\n   * event emitter.  This way we will know all the classes\n   * used by the @endpoint decorator.  THEN we can\n   * use requireInject to actually require the files\n   */\n  boring.on('decorator.router.endpoint', (eventData) => {\n\n    const metadata= decorators.router.getMetaDataByClass(eventData.target).metadata\n    endpoint_meta.push(endpoint_transformer(metadata));\n  });\n  boring.decorators.subscribeDecorators(boring);\n\n  /**\n   * Now we just took care of any future enpoints,\n   * let's grab all of the endpoints defined before\n   * this point in the boot sequence, such as middleware\n   */\n  const instances = injecture.allInstances('decorator.router.endpoint');\n\n  instances.forEach((Klass) => {\n    const metadata = decorators.router.getMetaDataByClass(Klass).metadata;\n    endpoint_meta.push(endpoint_transformer(metadata));\n  });\n\n\n  const moduleData = await requireInject([paths.boring_routers, paths.server_routers], boring);\n\n  const route_descriptors = endpoint_meta.concat(Object.keys(moduleData).map((name) => {\n    const route = moduleData[name] || { endpoints: [] };\n    // If the route does not already have a name\n    // then use the name of the module.  This object.name\n    // will be added to the route_meta array\n    // and NOT guranteed to be unique.  The name\n    // serves simply as an identifier in logging\n    if (!route.name) route.name = name;\n\n    return route;\n  }));\n\n  route_descriptors.forEach((route) => {\n    route.endpoints.forEach((endpoint) => {\n      const methods = endpoint.methods || {};\n      Object.keys(methods).forEach((method) => {\n        wrapHandler(boring, route, endpoint, methods, method);\n      });\n    });\n  });\n\n  return route_descriptors;\n};\n\nfunction noop(req, res, next) {\n  next();\n}\n\nfunction getMiddlewareFunc(boring, middleware) {\n  if (typeof middleware === 'string') {\n    return boring.middleware[middleware] || noop;\n  }\n\n  if (typeof middleware === 'function') {\n    return middleware;\n  }\n}\n\n// this is extracted from the code\n// below to not enclose all the objects\n// within initRoutes.  These handlers\n// will be wrapped and always in the heap\nfunction wrapHandler(boring, route, endpoint, methods, method) {\n  // first, normalize the middleware\n  let middlewareStack = endpoint.middleware || [];\n  if (typeof endpoint.middleware === 'function') {\n    middlewareStack = [middlewareStack];\n  }\n\n  const normalizedMiddleware = middlewareStack.map((middleware) => {\n    let func = getMiddlewareFunc(boring, middleware);\n    if (func) return func;\n\n    if (middleware && middleware.args) {\n      func = getMiddlewareFunc(boring, middleware.func);\n      return function curryWrapper(req, res, next) {\n        func(req, res, next, middleware.args);\n      };\n    }\n  });\n\n\n  // normalize data structure to match\n  // decorator API\n  if (typeof methods[method] === 'function') {\n    const func = methods[method];\n    methods[method] = {\n      handler: func,\n    };\n  }\n\n  const handler = methods[method].handler;\n  methods[method].handler = function wrappedHandler(req, res, next) {\n    const url = (req) ? req.path : '';\n    const ctx = {\n      req,\n      res,\n      next,\n      route,\n      endpoint,\n      method,\n      middleware: normalizedMiddleware,\n    };\n    ctx[method] = methods[method];\n\n\n    // first execute the middleware\n    boring.perform(`http::${method.toLowerCase()}::middleware`,\n        ctx,\n        () => new Promise(function(resolve, reject) {\n\n          compose(ctx.middleware)(ctx.req, ctx.res, function(err) {\n            if (err) return reject(err);\n            resolve(ctx);\n          });\n\n        }))\n        .then(() => {\n          boring.perform(`http::${method.toLowerCase()}`, ctx, async () => {\n            handler(...[ctx.req, ctx.res, ctx.next]);\n            return ctx;\n          }).catch((e) => {\n            logger.debug(e, `There was rejection from a {{http::${method}}} interceptor for `+url);\n          });\n        })\n        .catch((e) => {\n          logger.debug(e, `There was rejection from a {{http::${method}::middleware}} interceptor for `+url);\n        });\n\n  };\n}\n"],"file":"index.js"}