{"version":3,"sources":["../../../src/lib/init-routers/index.js"],"names":["compose","require","module","exports","BoringInjections","boring","decorators","endpoint_meta","on","eventData","metadata","router","getMetaDataByClass","target","push","subscribeDecorators","instances","injecture","allInstances","forEach","Klass","moduleData","paths","boring_routers","server_routers","route_descriptors","concat","Object","keys","map","name","route","endpoints","endpoint","methods","method","wrapHandler","initRoutes","noop","req","res","next","getMiddlewareFunc","middleware","middlewareStack","runStack","func","args","curryWrapper","handler","wrappedHandler","ctx","perform","toLowerCase","Promise","resolve","reject","err","then","call","catch","e","logger","error"],"mappings":"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","sourcesContent":["import paths from 'paths';\nimport requireInject from 'require-inject-all';\nimport logger from 'boring-logger';\nimport injecture from 'injecture';\nimport endpoint_transformer from './transform-annotation';\n//import * as decorators from '../decorators'\nconst compose = require('compose-middleware').compose;\n\n\nmodule.exports = async function initRoutes(BoringInjections) {\n  const {\n    boring,\n  } = BoringInjections;\n\n  const decorators = boring.decorators;\n\n  const endpoint_meta = [];\n\n  /**\n   * !IMPORTANT!\n   *\n   * First, we *must* subscribe the decorators to boring's\n   * event emitter.  This way we will know all the classes\n   * used by the @endpoint decorator.  THEN we can\n   * use requireInject to actually require the files\n   */\n  boring.on('decorator.router.endpoint', (eventData) => {\n\n    const metadata= decorators.router.getMetaDataByClass(eventData.target).metadata\n    endpoint_meta.push(endpoint_transformer(metadata));\n  });\n  boring.decorators.subscribeDecorators(boring);\n\n  /**\n   * Now we just took care of any future enpoints,\n   * let's grab all of the endpoints defined before\n   * this point in the boot sequence, such as middleware\n   */\n  const instances = injecture.allInstances('decorator.router.endpoint');\n\n  instances.forEach((Klass) => {\n    const metadata = decorators.router.getMetaDataByClass(Klass).metadata;\n    endpoint_meta.push(endpoint_transformer(metadata));\n  });\n\n\n  const moduleData = await requireInject([paths.boring_routers, paths.server_routers], boring);\n\n  const route_descriptors = endpoint_meta.concat(Object.keys(moduleData).map((name) => {\n    const route = moduleData[name] || { endpoints: [] };\n    // If the route does not already have a name\n    // then use the name of the module.  This object.name\n    // will be added to the route_meta array\n    // and NOT guranteed to be unique.  The name\n    // serves simply as an identifier in logging\n    if (!route.name) route.name = name;\n\n    return route;\n  }));\n\n  route_descriptors.forEach((route) => {\n    route.endpoints.forEach((endpoint) => {\n      const methods = endpoint.methods || {};\n      Object.keys(methods).forEach((method) => {\n        wrapHandler(boring, route, endpoint, methods, method);\n      });\n    });\n  });\n\n  return route_descriptors;\n};\n\nfunction noop(req, res, next) {\n  next();\n}\n\nfunction getMiddlewareFunc(boring, middleware) {\n  if (typeof middleware === 'string') {\n    return boring.middleware[middleware] || noop;\n  }\n\n  if (typeof middleware === 'function') {\n    return middleware;\n  }\n}\n\n// this is extracted from the code\n// below to not enclose all the objects\n// within initRoutes.  These handlers\n// will be wrapped and always in the heap\nfunction wrapHandler(boring, route, endpoint, methods, method) {\n  // first, normalize the middleware\n  let middlewareStack = endpoint.middleware || [];\n  if (typeof endpoint.middleware === 'function') {\n    middlewareStack = [middlewareStack];\n  }\n\n  const runStack = compose(middlewareStack.map((middleware) => {\n    let func = getMiddlewareFunc(boring, middleware);\n    if (func) return func;\n\n    if (middleware && middleware.args) {\n      func = getMiddlewareFunc(boring, middleware.func);\n      return function curryWrapper(req, res, next) {\n        func(req, res, next, middleware.args);\n      };\n    }\n  }));\n\n\n  // normalize data structure to match\n  // decorator API\n  if (typeof methods[method] === 'function') {\n    const func = methods[method];\n    methods[method] = {\n      handler: func,\n    };\n  }\n\n  const handler = methods[method].handler;\n  methods[method].handler = function wrappedHandler(req, res, next) {\n    const ctx = {\n      req,\n      res,\n      next,\n      route,\n      endpoint,\n      method,\n    };\n    ctx[method] = methods[method];\n\n    // first execute the middleware\n    boring.perform(`http::${method.toLowerCase()}::middleware`, ctx, () => new Promise(function(resolve, reject) {\n        runStack(ctx.req, ctx.res, function(err) {\n          if (err) return reject(err);\n          resolve(ctx);\n        });\n\n      }))\n      .then(() => {\n      // then execte handler\n        boring.perform(`http::${method.toLowerCase()}`, ctx, async function () {\n          handler.call(this, ctx.req, ctx.res, ctx.next);\n          return ctx;\n        }).catch((e) => {\n          logger.error(e, 'There was a critical error thrown in the handler stack, rethrowing to express');\n          throw e;\n        });\n      })\n      .catch((e) => {\n        logger.error(e, 'There was a critical error thrown in the handler stack, rethrowing to express');\n        throw e;\n      });\n  };\n}\n"],"file":"index.js"}