{"version":3,"sources":["../../../../src/lib/init-routers/test/transform-annotations-test.js"],"names":["assert","require","proxyquire","noPreserveCache","transformer","decorators","describe","it","done","endpoint","get","post","getMetaDataByClass","Stuff","serveFoo","meep","jeep","endpoint_meta","metadata","deepEqual","prototype"],"mappings":";;;;AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAAP,CAAsBE,eAAtB,EAAnB;;AACA,MAAMC,WAAW,GAAGH,OAAO,CAAC,yBAAD,CAA3B;;AACA,MAAMI,UAAU,GAAGJ,OAAO,CAAC,yBAAD,CAA1B;;AAEAK,QAAQ,CAAC,uBAAD,EAA0B,YAAW;AAG3CC,EAAAA,EAAE,CAAC,+BAAD,EAAkCC,IAAI,IAAI;AAAA;;AAE1C,UAAM;AACJC,MAAAA,QADI;AACMC,MAAAA,GADN;AACWC,MAAAA,IADX;AACiBC,MAAAA;AADjB,QAEFP,UAFJ,CAF0C,CAO1C;AACA;;AAR0C,QAUpCQ,KAVoC,WASzCJ,QAAQ,CAAC,OAAD,CATiC,UAYvCC,GAAG,CAAC,OAAD,CAZoC,UAavCC,IAAI,CAAC,OAAD,CAbmC,UAkBvCD,GAAG,CAAC,MAAD,CAlBoC,UAuBvCC,IAAI,CAAC,MAAD,CAvBmC,2BAS1C,MACME,KADN,CACY;AAIVC,MAAAA,QAFA,GAEW,CAEV;;AAGDC,MAAAA,IADA,GACO,CAEN;;AAGDC,MAAAA,IADA,GACO,CAEN;;AAhBS,KAV8B;AA6B1C,UAAMC,aAAa,GAAGb,WAAW,CAACQ,kBAAkB,CAACC,KAAD,CAAlB,CAA0BK,QAA3B,CAAjC,CA7B0C,CA8B1C;;AACAlB,IAAAA,MAAM,CAACmB,SAAP,CACEF,aADF,EAEE;AACE,cAAQ,OADV;AAEE,mBAAa,CACX;AACE,gBAAQ,OADV;AAEE,mBAAW;AACT,iBAAO;AACL,uBAAWJ,KAAK,CAACO,SAAN,CAAgBN;AADtB,WADE;AAIT,kBAAS;AACP,uBAAWD,KAAK,CAACO,SAAN,CAAgBN;AADpB;AAJA;AAFb,OADW,EAYX;AACE,gBAAQ,MADV;AAEE,mBAAW;AACT,iBAAO;AACL,uBAAWD,KAAK,CAACO,SAAN,CAAgBL;AADtB;AADE;AAFb,OAZW,EAoBX;AACA;AACA;AACA;AACA;AACE,gBAAQ,MADV;AAEE,mBAAW;AACT,kBAAS;AACP,uBAAWF,KAAK,CAACO,SAAN,CAAgBJ;AADpB;AADA;AAFb,OAxBW;AAFf,KAFF;AAwCAR,IAAAA,IAAI;AAEL,GAzEC,CAAF;AA2ED,CA9EO,CAAR","sourcesContent":["\nconst assert = require('assert');\nconst proxyquire = require('proxyquire').noPreserveCache();\nconst transformer = require('../transform-annotation');\nconst decorators = require('../../decorators/router');\n\ndescribe('Transform Annotations', function() {\n\n\n  it('Will transform class metadata', done => {\n\n    const {\n      endpoint, get, post, getMetaDataByClass\n    } = decorators;\n\n\n    // this is to simply fire the \n    // event decorator.router.endpoint\n    @endpoint('/meow')\n    class Stuff {\n\n      @get('/beep')\n      @post('/beep')\n      serveFoo() {\n\n      }\n\n      @get('/guz')\n      meep() {\n\n      }\n\n      @post('/guz')\n      jeep() {\n        \n      }\n    }\n\n    const endpoint_meta = transformer(getMetaDataByClass(Stuff).metadata);\n    //    console.log(JSON.stringify(endpoint_meta, null, 2))\n    assert.deepEqual(\n      endpoint_meta, \n      {\n        \"path\": \"/meow\",\n        \"endpoints\": [\n          {\n            \"path\": \"/beep\",\n            \"methods\": {\n              \"get\": {\n                \"handler\": Stuff.prototype.serveFoo\n              },\n              \"post\" : {\n                \"handler\": Stuff.prototype.serveFoo\n              }\n            }\n          },\n          {\n            \"path\": \"/guz\",\n            \"methods\": {\n              \"get\": {\n                \"handler\": Stuff.prototype.meep\n              }\n            }\n          },\n          // WHATEVS, for now this wasn't the goal as\n          // this should be combined with the GET:/guz.  \n          // TODO: fix later.  This can be left as is \n          // because connect_express will treat this all the same\n          { \n            \"path\": \"/guz\",\n            \"methods\": {\n              \"post\" : {\n                \"handler\": Stuff.prototype.jeep\n              }\n            }\n          }\n        ]\n      }\n    );\n\n    done();\n\n  });\n\n});"],"file":"transform-annotations-test.js"}