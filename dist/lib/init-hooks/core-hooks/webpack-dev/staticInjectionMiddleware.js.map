{"version":3,"sources":["../../../../../src/lib/init-hooks/core-hooks/webpack-dev/staticInjectionMiddleware.js"],"names":["logger","require","paths","pathitize","manifestAssets","devAssets","assetsByManifest","manifestPath","asset_manifest","manifest","info","js","Object","keys","reduce","collector","name","assets","concat","filter","asset","endsWith","length","split","shift","css","assetsByDevserver","webpackStats","chunks","toJson","assetsByChunkName","chunk","module","exports","getStaticInjections","res","entrypoint","locals","asset_key","js_files","css_files","js_injections","map","css_injections"],"mappings":"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","sourcesContent":["const logger = require('boring-logger');\r\nconst paths = require('paths');\r\nconst pathitize = require('./pathitize');\r\n\r\nlet manifestAssets, devAssets;\r\nfunction assetsByManifest() {\r\n\r\n  if (manifestAssets) return manifestAssets;\r\n  const manifestPath = paths.asset_manifest;\r\n  const manifest = require(manifestPath);\r\n  logger.info(manifest, 'Manifest loaded from path ' + manifestPath);\r\n\r\n  const js = Object.keys(manifest).reduce((collector, name) => {\r\n    let assets = [].concat(manifest[name]).filter(asset => asset.endsWith('.js'));\r\n    if (assets.length === 0) return collector;\r\n    collector[name.split('.').shift()] = assets;\r\n    return collector;\r\n  }, {});\r\n\r\n  const css = Object.keys(manifest).reduce((collector, name) => {\r\n    let assets = [].concat(manifest[name]).filter(asset => asset.endsWith('.css'));\r\n    if (assets.length === 0) return collector;\r\n    collector[name.split('.').shift()] = assets;\r\n    return collector;\r\n  }, {});\r\n\r\n  manifestAssets = {\r\n    js,\r\n    css\r\n  }\r\n\r\n  return manifestAssets;\r\n}\r\n\r\nfunction assetsByDevserver(webpackStats) {\r\n//  if (devAssets) return devAssets; // no need to cache cause localhost \r\n  const chunks = webpackStats.toJson().assetsByChunkName;\r\n  \r\n  const js = Object.keys(chunks).reduce((collector, name) => {\r\n    const chunk = chunks[name];\r\n    const assets = chunk.filter(chunk => chunk.endsWith('.js'));\r\n    if (assets.length === 0) return collector;\r\n    collector[name.split('.').shift()] = assets;\r\n    return collector;\r\n  }, {})\r\n\r\n  const css = Object.keys(chunks).reduce((collector, name) => {\r\n    const chunk = chunks[name];\r\n    const assets = chunk.filter(chunk => chunk.endsWith('.css'));\r\n    if (assets.length === 0) return collector;\r\n    collector[name.split('.').shift()] = assets;\r\n    return collector;\r\n  }, {})\r\n\r\n  return {\r\n    js,\r\n    css\r\n  };\r\n}\r\n\r\nmodule.exports = function getStaticInjections(res, entrypoint) {\r\n  const assets = (res.locals.webpackStats) ? assetsByDevserver(res.locals.webpackStats) : assetsByManifest();\r\n  const asset_key = pathitize(entrypoint);\r\n\r\n  const js_files = assets.js[asset_key] || [];\r\n  const css_files = assets.css[asset_key] || [];\r\n\r\n  res.locals.js_injections = js_files.map(asset => {\r\n    if (asset[0] !== '/') asset = '/' + asset;\r\n    return `\\n<script async=\"true\" src=\"${asset}\"></script>`;\r\n  });\r\n\r\n  res.locals.css_injections = css_files.map(asset => {\r\n    if (asset[0] !== '/') asset = '/' + asset;\r\n    return `\\n<link rel=\"stylesheet\" href=\"${asset}\"></link>`;\r\n  });\r\n\r\n}"],"file":"staticInjectionMiddleware.js"}