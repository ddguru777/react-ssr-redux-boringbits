{"version":3,"sources":["../../../../src/lib/init-hooks/core-hooks/healthy.js"],"names":["healthy","require","os","moment","module","exports","BoringInjections","boring","HealthCheck","HealthModel","healthCheck","started","Date","hostname","pid","process","model","serialize","healthObj","getHealthObject","uptime","fromNow","options","serializer","getHeap","mem","memoryUsage","Object","keys","reduce","acc","key","Math","ceil","memoryHealth","checkInterval","asyncCheck","cb","heap","forEach","set","requestData","total","cnt","requestHealth","addChildCheck","before","ctx","name","healthyMiddleware","createMiddleware","app","use","req","res","next","Promise","resolve"],"mappings":"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","sourcesContent":["const healthy = require('healthy');\nconst os = require('os');\nconst moment = require('moment');\n\nmodule.exports = function(BoringInjections) {\n  \n  const {\n    boring\n  } = BoringInjections;\n\n  const {HealthCheck, HealthModel} = healthy;\n\n  const healthCheck = new HealthCheck({}, {\n    started: new Date(),\n    hostname: os.hostname(),\n    pid: process.pid\n  });\n\n  healthCheck.model.serialize = function() {\n    const healthObj = this.getHealthObject();\n    healthObj.uptime = moment(healthObj.started).fromNow();\n    return this.options.serializer(healthObj);\n  }\n\n  function getHeap() {\n    const mem = process.memoryUsage();\n    return Object.keys(mem).reduce((acc, key)  => {\n      acc[key] = Math.ceil(mem[key] / 1024 / 1024 * 100) / 100;\n      return acc;\n    }, {});\n  }\n\n  const memoryHealth = new HealthModel(getHeap(), {\n    checkInterval: 15000,\n    asyncCheck: function(cb) {\n      const heap = getHeap();\n      Object.keys(heap).forEach(key => {\n        memoryHealth.set(key, heap[key]);\n      })\n      cb();\n    }\n  });\n\n  const requestData = {\n    total: {\n      cnt: 0\n    }\n  }\n  const requestHealth = new HealthModel(requestData);\n\n  healthCheck.addChildCheck('memory', memoryHealth);\n  healthCheck.addChildCheck('requests', requestHealth);\n\n  boring.before('add-hooks', function() {\n\n    boring.before('app.use', function(ctx) {\n      if (ctx.name === 'boring-session') {\n        const healthyMiddleware = healthCheck.createMiddleware();\n        boring.app.use(function (req, res, next) {\n          requestData.total.cnt++;\n          healthyMiddleware(req, res, next);\n        });\n      }\n      return Promise.resolve();\n    });\n    \n    return Promise.resolve();\n  });\n\n  \n\n  return {name: 'healthy'}\n}"],"file":"healthy.js"}