{"version":3,"sources":["../../../../../../src/lib/init-hooks/core-hooks/react/test/react-test.js"],"names":["assert","require","decorators","Understudy","describe","reactTests","reactHook","beforeEach","it","done","injection","boring","call","endpoint","reactEntry","entrypoint","get","router","Foo","beep","metaData","getMetaDataByClass","metadata","equal","endpoints","methods","split","pop","reactRoot","ok","react"],"mappings":";;;;AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,wBAAD,CAA1B;;AACA,MAAME,UAAU,GAAGF,OAAO,CAAC,mBAAD,CAA1B;;AAGAG,QAAQ,CAAC,aAAD,EAAgB,SAASC,UAAT,GAAsB;AAE5C,MAAIC,SAAJ;AACAC,EAAAA,UAAU,CAAC,YAAW;AACpBD,IAAAA,SAAS,GAAGL,OAAO,CAAC,UAAD,CAAnB;AACD,GAFS,CAAV;AAIAO,EAAAA,EAAE,CAAC,6CAAD,EAAgDC,IAAI,IAAI;AAAA;;AAExD,UAAMC,SAAS,GAAG;AAChBC,MAAAA,MAAM,EAAE;AACNT,QAAAA;AADM;AADQ,KAAlB;AAMAC,IAAAA,UAAU,CAACS,IAAX,CAAgBF,SAAS,CAACC,MAA1B;AAEAL,IAAAA,SAAS,CAACI,SAAD,CAAT;AAEA,UAAM;AACJG,MAAAA,QADI;AAEJC,MAAAA,UAFI;AAGJC,MAAAA,UAHI;AAIJC,MAAAA;AAJI,QAKDN,SAAS,CAACC,MAAV,CAAiBT,UAAjB,CAA4Be,MALjC;AAZwD,QAoBlDC,GApBkD,WAmBvDL,QAAQ,CAAC,MAAD,CAnB+C,UAsBrDC,UAAU,CAAC,GAAD,CAtB2C,UAuBrDE,GAAG,CAAC,KAAD,CAvBkD,2BAmBxD,MACME,GADN,CACU;AAIRC,MAAAA,IAFA,GAEO,CAEN;;AANO,KApB8C;AA6BxD,UAAMC,QAAQ,GAAGlB,UAAU,CAACe,MAAX,CAAkBI,kBAAlB,CAAqCH,GAArC,EAA0CI,QAA3D;AAEAtB,IAAAA,MAAM,CAACuB,KAAP,CAAaH,QAAQ,CAACI,SAAT,CAAmBL,IAAnB,CAAwBM,OAAxB,CAAgCT,GAAhC,CAAoCD,UAApC,CAA+C,CAA/C,EAAkDW,KAAlD,CAAwD,SAAxD,EAAmEC,GAAnE,EAAb,EAAwF,mCAAxF;AACA3B,IAAAA,MAAM,CAACuB,KAAP,CAAaH,QAAQ,CAACI,SAAT,CAAmBL,IAAnB,CAAwBM,OAAxB,CAAgCT,GAAhC,CAAoCF,UAApC,CAA+C,CAA/C,EAAkDc,SAA/D,EAA2E,GAA3E;AACA5B,IAAAA,MAAM,CAAC6B,EAAP,CAAUnB,SAAS,CAACC,MAAV,CAAiBmB,KAA3B,EAAkC,0CAAlC;AACArB,IAAAA,IAAI;AACL,GAnCC,CAAF;AAoCD,CA3CO,CAAR","sourcesContent":["const assert = require('assert');\nconst decorators = require('../../../../decorators');\nconst Understudy = require('boring-understudy');\n\n\ndescribe('React Tests', function reactTests() {\n\n  let reactHook;\n  beforeEach(function() {\n    reactHook = require('../index');\n  });\n\n  it('will push a decorator that calls entrypoint', done => {\n\n    const injection = {\n      boring: {\n        decorators,\n      },\n    };\n\n    Understudy.call(injection.boring);\n\n    reactHook(injection);\n\n    const {\n      endpoint,\n      reactEntry,\n      entrypoint,\n      get\n     } = injection.boring.decorators.router;\n\n    @endpoint('/foo')\n    class Foo {\n\n      @reactEntry('1')\n      @get('/be')\n      beep() {\n\n      }\n    }\n\n    const metaData = decorators.router.getMetaDataByClass(Foo).metadata;\n\n    assert.equal(metaData.endpoints.beep.methods.get.entrypoint[0].split('/boring').pop(),  '/src/client/pages/1/entrypoint.js');\n    assert.equal(metaData.endpoints.beep.methods.get.reactEntry[0].reactRoot,  '1');\n    assert.ok(injection.boring.react, 'should have pushed an object onto boring');\n    done();\n  });\n});\n"],"file":"react-test.js"}