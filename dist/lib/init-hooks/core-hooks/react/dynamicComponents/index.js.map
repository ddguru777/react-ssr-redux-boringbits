{"version":3,"sources":["../../../../../../src/lib/init-hooks/core-hooks/react/dynamicComponents/index.js"],"names":["makeConainerCode","path","importPath","container","makeModuleCode","modules","Object","keys","map","moduleName","join","getEntryWrappers","reactHandlerPaths","containers","filter","sort","containerA","containerB","length","legnth","prefix","__dirname","beforeFilename","reactRoot","beforeEntryFilePath","afterFilename","afterEntryFilePath","code","beforeEntryLoader","toString","babelOptions","legacy","babelResults","babel","transformSync","writeNewBefore","fs","existsSync","readFileSync","logger","debug","writeFileSync","JSON","stringify"],"mappings":"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","sourcesContent":["\nimport * as fs from 'fs';\nimport * as babel from '@babel/core';\nimport logger from 'boring-logger';\nimport beforeEntryLoader from './beforeEntryLoader';\n\nfunction makeConainerCode({path, importPath} = container) {\n  // const name = path.replace(/\\//g, '');\n\n  /*\n  // TODO: I had to backpedal a bit on\n  // making these routez lazy loaded via\n  // webpacks optimization chunks.\n  // Should be too hard to renable,\n  // was just having some trouble keeping\n  // hot reload working which is more of a\n  // priority\n  const ${name}_container = Loadable({\n    loader: () => imporzzt('${importPath}'),\n    loading: function Loading() {\n      return <></>;\n    },\n  });\n  */\n\n  return `\n    containers.push({\n      path: '${path}',\n      container: require('${importPath}').default\n    })\n  `;\n}\n\nfunction makeModuleCode(modules) {\n\n  return Object.keys(modules).map(moduleName => {\n    return `\n      modules['${moduleName}'] = require('${modules[moduleName]}').default;\n    `;\n  }).join('\\n');\n}\n\nexport default function getEntryWrappers(reactHandlerPaths, modules = {}) {\n\n\n  const containers = reactHandlerPaths\n      .containers\n      .filter(container => container.path)\n      .sort((containerA, containerB) => {\n        /**\n         * This is a reverse sort on the path, the\n         * goal here is so paths that are more specific\n         * end up rendering first and the \"default\"\n         * path, which is typically the shortest\n         * will be at the bottom.  For now\n         * this seems to work but I assume someone\n         * will tell me a use case and we'll have to\n         * rework this\n         */\n        if (containerA.path.length<containerB.path.length) return 1;\n        if (containerA.path.length>containerB.path.length) return -1;\n        return 0;\n      });\n\n  if (containers.legnth === 0) return [];\n\n  const prefix = __dirname + '/dist';\n  const beforeFilename = reactHandlerPaths.reactRoot + '_beforeEntry.js';\n\n  const beforeEntryFilePath = prefix + '/' + beforeFilename;\n\n  const afterFilename = reactHandlerPaths.reactRoot + '_afterEntry.js';\n  const afterEntryFilePath = prefix + '/' + afterFilename;\n\n  const code = `\n    // THIS IS A GENERATED FILE, PLEASE DO NOT MODIFY\n    const containers = [];\n    const modules = [];\n  ` + containers.map(makeConainerCode).join('\\n')\n    + makeModuleCode(modules)\n    + beforeEntryLoader.toString()\n    + '\\nbeforeEntryLoader();';\n\n  const babelOptions = {\n    'babelrc': false,\n    'sourceMaps': true,\n    'presets': [\n      ['@babel/preset-env', {\n        'targets': {\n          'ie': '11',\n        },\n      }],\n      '@babel/preset-react',\n    ],\n    'plugins': [\n      '@babel/plugin-proposal-object-rest-spread',\n      ['@babel/plugin-proposal-decorators', {\n        legacy: true,\n      }],\n      ['@babel/plugin-syntax-dynamic-import'],\n    ],\n  };\n\n  const babelResults = babel.transformSync(code, babelOptions);\n\n\n  let writeNewBefore = true;\n  if (fs.existsSync(beforeEntryFilePath)) {\n    if (fs.readFileSync(beforeEntryFilePath) == babelResults.code) {\n      writeNewBefore = false;\n      logger.debug(`The fle ${beforeEntryFilePath} has already been generated, nothing has changed`);\n    }\n  }\n\n  if (writeNewBefore) {\n    logger.debug(`The fle ${beforeEntryFilePath} is being generated, please do not change it's contents`);\n    fs.writeFileSync(beforeEntryFilePath, babelResults.code);\n    fs.writeFileSync(beforeEntryFilePath+'.map', JSON.stringify(babelResults.map));\n  }\n\n  fs.writeFileSync(afterEntryFilePath, `//afterEntry hook`);\n\n\n  return [beforeEntryFilePath, afterEntryFilePath];\n};\n"],"file":"index.js"}