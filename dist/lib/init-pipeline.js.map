{"version":3,"sources":["../../src/lib/init-pipeline.js"],"names":["config","require","express","initRouters","logger","initMiddleware","initHooks","EventEmitter","paths","Understudy","decorators","appUseOverride","InitPipeline","constructor","wildcard","call","middleware","hooks","app","oldUse","use","perform","bind","add_middleware","name","Error","emit","add_hook","hook","add_router","router","routePath","path","endpoints","forEach","endpoint","methods","Object","keys","method","methodsObj","handler","info","toUpperCase","build","options","injections","assign","boring","routers","route","module","exports"],"mappings":";;;;;;AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAA3B;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,eAAD,CAAtB;;AACA,MAAMI,cAAc,GAAGJ,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMK,SAAS,GAAGL,OAAO,CAAC,cAAD,CAAzB;;AACA,MAAMM,YAAY,GAAGN,OAAO,CAAC,eAAD,CAA5B;;AACA,MAAMO,KAAK,GAAGP,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMQ,UAAU,GAAGR,OAAO,CAAC,mBAAD,CAA1B;;AACA,MAAMS,UAAU,GAAGT,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMU,cAAc,GAAGV,OAAO,CAAC,yBAAD,CAA9B;;AAEA,MAAMW,YAAN,SAA2BL,YAA3B,CAAyC;AAEvCM,EAAAA,WAAW,GAAG;AACZ,UAAM;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAN;AACAL,IAAAA,UAAU,CAACM,IAAX,CAAgB,IAAhB;AACA,SAAKf,MAAL,GAAcA,MAAd;AACA,SAAKI,MAAL,GAAcA,MAAd;AACA,SAAKI,KAAL,GAAaA,KAAb;AAEA,SAAKQ,UAAL,GAAkB,EAAlB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,GAAL,GAAWhB,OAAO,EAAlB;AACA,SAAKQ,UAAL,GAAkBA,UAAlB;AAEA,SAAKQ,GAAL,CAASC,MAAT,GAAkB,KAAKD,GAAL,CAASE,GAA3B;AACA,UAAMC,OAAO,GAAG,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAhB;AAEA,SAAKJ,GAAL,CAASE,GAAT,GAAeT,cAAc,CAAC,KAAKO,GAAN,EAAWG,OAAX,CAA7B;AACD;;AAEDE,EAAAA,cAAc,CAACC,IAAD,EAAOR,UAAP,EAAmB;AAC/B,QAAI,KAAKA,UAAL,CAAgBQ,IAAhB,CAAJ,EAA2B,MAAM,IAAIC,KAAJ,CAAU,gDAA+CD,IAAzD,CAAN;AAC3B,SAAKR,UAAL,CAAgBQ,IAAhB,IAAwBR,UAAxB;AACA,SAAKU,IAAL,CAAU,kBAAV,EAA8BF,IAA9B,EAAoCR,UAApC;AACD;;AAEDW,EAAAA,QAAQ,CAACH,IAAD,EAAOI,IAAP,EAAa;AACnB,QAAI,KAAKX,KAAL,CAAWO,IAAX,CAAJ,EAAsB,MAAM,IAAIC,KAAJ,CAAU,0CAAyCD,IAAnD,CAAN;AACtB,SAAKP,KAAL,CAAWO,IAAX,IAAmBI,IAAnB;AACA,SAAKF,IAAL,CAAU,YAAV,EAAwBF,IAAxB,EAA8BI,IAA9B;AACD;;AAEDC,EAAAA,UAAU,CAACC,MAAD,EAAS;AAEjB,UAAMC,SAAS,GAAGD,MAAM,CAACE,IAAP,IAAe,EAAjC;AACA,UAAMd,GAAG,GAAG,KAAKA,GAAjB;AAEAY,IAAAA,MAAM,CAACG,SAAP,CAAiBC,OAAjB,CAAyB,CAACC,QAAQ,GAAG;AAACH,MAAAA,IAAI,EAAE,EAAP;AAAWI,MAAAA,OAAO,EAAE;AAApB,KAAZ,KAAwC;AAE/D;AACA,YAAMA,OAAO,GAAGD,QAAQ,CAACC,OAAT,IAAoB,EAApC;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBF,OAArB,CAA6BK,MAAM,IAAI;AACrC,YAAIC,UAAU,GAAGL,QAAQ,CAACC,OAAT,CAAiBG,MAAjB,CAAjB;AACA,YAAIP,IAAI,GAAGQ,UAAU,CAACR,IAAtB;AACA,YAAI,CAACA,IAAL,EAAW,OAAX,KACKA,IAAI,GAAGD,SAAS,GAAGC,IAAnB;AAELd,QAAAA,GAAG,CAACqB,MAAD,CAAH,CAAYP,IAAZ,EAAkBQ,UAAU,CAACC,OAA7B;AACArC,QAAAA,MAAM,CAACsC,IAAP,CAAa,cAAaH,MAAM,CAACI,WAAP,EAAqB,cAAaX,IAAK,EAAjE;AACD,OARD;AAUA,WAAKN,IAAL,CAAU,gBAAV,EAA4BS,QAA5B;AACD,KAfD;AAiBD;;AAEKS,EAAAA,KAAN,CAAYC,OAAZ,EAAqB;AAAA;;AAAA;AAEnB,UAAIC,UAAU,GAAGT,MAAM,CAACU,MAAP,CAAc,EAAd,EAAkB;AACjCC,QAAAA,MAAM,EAAE;AADyB,OAAlB,EAEdH,OAFc,CAAjB;AAIA,YAAM5B,KAAK,SAAS,KAAI,CAACI,OAAL,CAAa,YAAb,EAA2ByB,UAA3B;AAAA;AAAA,wBAAuC,aAAY;AACrE,qBAAaxC,SAAS,CAACwC,UAAD,CAAtB;AACD,OAFmB,EAApB;AAIAA,MAAAA,UAAU,CAAC7B,KAAX,GAAmBA,KAAnB;AAEA,YAAM,KAAI,CAACI,OAAL,CAAa,WAAb,EAA0ByB,UAA1B;AAAA;AAAA,wBAAsC,aAAW;AACrDT,QAAAA,MAAM,CAACC,IAAP,CAAYQ,UAAU,CAAC7B,KAAvB,EAA8BiB,OAA9B,CAAsCV,IAAI,IAAI,KAAI,CAACG,QAAL,CAAcH,IAAd,EAAoBsB,UAAU,CAAC7B,KAAX,CAAiBO,IAAjB,CAApB,CAA9C;AACA,eAAOsB,UAAP;AACD,OAHK,EAAN;AAKA,YAAM9B,UAAU,SAAS,KAAI,CAACK,OAAL,CAAa,iBAAb,EAAgCyB,UAAhC;AAAA;AAAA,wBAA4C,aAAY;AAC/E,qBAAazC,cAAc,CAACyC,UAAD,CAA3B;AACD,OAFwB,EAAzB;AAIAA,MAAAA,UAAU,CAAC9B,UAAX,GAAwBA,UAAxB;AAEA,YAAM,KAAI,CAACK,OAAL,CAAa,gBAAb,EAA+ByB,UAA/B;AAAA;AAAA,wBAA2C,aAAW;AAC1DT,QAAAA,MAAM,CAACC,IAAP,CAAYQ,UAAU,CAAC9B,UAAvB,EAAmCkB,OAAnC,CAA2CV,IAAI,IAAI,KAAI,CAACD,cAAL,CAAoBC,IAApB,EAA0BsB,UAAU,CAAC9B,UAAX,CAAsBQ,IAAtB,CAA1B,CAAnD;AACA,eAAOsB,UAAP;AACD,OAHK,EAAN;AAKA,YAAMG,OAAO,SAAS,KAAI,CAAC5B,OAAL,CAAa,cAAb,EAA6ByB,UAA7B;AAAA;AAAA,wBAAyC,aAAY;AACzE,qBAAa3C,WAAW,CAAC2C,UAAD,CAAxB;AACD,OAFqB,EAAtB;AAIAA,MAAAA,UAAU,CAACG,OAAX,GAAqBA,OAArB;AAEA,YAAM,KAAI,CAAC5B,OAAL,CAAa,aAAb,EAA4ByB,UAA5B;AAAA;AAAA,wBAAwC,aAAW;AACvDA,QAAAA,UAAU,CAACG,OAAX,CAAmBf,OAAnB,CAA2BgB,KAAK,IAAI,KAAI,CAACrB,UAAL,CAAgBqB,KAAhB,CAApC;AACA,eAAOJ,UAAP;AACD,OAHK,EAAN;AAKA,aAAOA,UAAP;AAvCmB;AAwCpB;;AAhGsC;;AAmGzCK,MAAM,CAACC,OAAP,GAAiBxC,YAAjB","sourcesContent":["const config = require('boring-config');\nconst express = require('express');\nconst initRouters = require('./init-routers');\nconst logger = require('boring-logger');\nconst initMiddleware = require('./init-middleware');\nconst initHooks = require('./init-hooks');\nconst EventEmitter = require('eventemitter2');\nconst paths = require('paths');\nconst Understudy = require('boring-understudy');\nconst decorators = require('./decorators')\nconst appUseOverride = require('./server/appUseOverride');\n\nclass InitPipeline extends EventEmitter  {\n\n  constructor() {\n    super({wildcard: true});\n    Understudy.call(this);\n    this.config = config;\n    this.logger = logger;\n    this.paths = paths;\n\n    this.middleware = {};\n    this.hooks = {};\n    this.app = express();\n    this.decorators = decorators;\n\n    this.app.oldUse = this.app.use;\n    const perform = this.perform.bind(this);\n\n    this.app.use = appUseOverride(this.app, perform);\n  }\n\n  add_middleware(name, middleware) {\n    if (this.middleware[name]) throw new Error('Cannot add middleware with the same key as '+ name)\n    this.middleware[name] = middleware;\n    this.emit('added.middleware', name, middleware);\n  }\n\n  add_hook(name, hook) {\n    if (this.hooks[name]) throw new Error('Cannot add hook with the same key as '+ name)\n    this.hooks[name] = hook;\n    this.emit('added.hook', name, hook);\n  }\n\n  add_router(router) {\n\n    const routePath = router.path || '';\n    const app = this.app;\n\n    router.endpoints.forEach((endpoint = {path: '', methods: {}}) => {\n\n      // don't blow up if there are no methods\n      const methods = endpoint.methods || {};\n      Object.keys(methods).forEach(method => {\n        let methodsObj = endpoint.methods[method];\n        let path = methodsObj.path;\n        if (!path) return;\n        else path = routePath + path;\n\n        app[method](path, methodsObj.handler);\n        logger.info(`Installed {${method.toUpperCase()}} for path ${path}`);\n      });\n\n      this.emit('added.endpoint', endpoint);\n    })\n\n  }\n\n  async build(options) {\n\n    let injections = Object.assign({}, {\n      boring: this\n    }, options);\n\n    const hooks = await this.perform('init-hooks', injections, async () => {\n      return await initHooks(injections);\n    })\n\n    injections.hooks = hooks;\n\n    await this.perform('add-hooks', injections, async() => {\n      Object.keys(injections.hooks).forEach(name => this.add_hook(name, injections.hooks[name]));\n      return injections;\n    })\n\n    const middleware = await this.perform('init-middleware', injections, async () => {\n      return await initMiddleware(injections);\n    })\n\n    injections.middleware = middleware;\n\n    await this.perform('add-middleware', injections, async() => {\n      Object.keys(injections.middleware).forEach(name => this.add_middleware(name, injections.middleware[name]));\n      return injections;\n    })\n\n    const routers = await this.perform('init-routers', injections, async () => {\n      return await initRouters(injections);\n    })\n\n    injections.routers = routers;\n\n    await this.perform('add-routers', injections, async() => {\n      injections.routers.forEach(route => this.add_router(route));\n      return injections;\n    })\n\n    return injections;\n  }\n}\n\nmodule.exports = InitPipeline;"],"file":"init-pipeline.js"}