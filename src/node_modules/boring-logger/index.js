const bunyan = require('bunyan');
const config = require('../boring-config');
const loggerOptions = config.get('boring.logger');
const cls = require('boring-cls');
const log = bunyan.createLogger(Object.assign({},
  {
    // empty defaults for now
  },
  loggerOptions
));

const levels = ['fatal', 'error', 'warn', 'info', 'debug', 'trace'];
levels.forEach(level => {
  const oldLevel = log[level];
  log[level] = function shadhowedLogLevel(...args) {

    const ns = cls.getNamespace('http-request');
    let addedCorr = false;
    let corrId = (ns && ns.get) ? ns.get('corrId') || 'lost' : 'na';

    if (corrId === 'lost') {
      const initNS = cls.getNamespace('boring-init');
      corrId = (initNS && initNS.get) ? initNS.get('corrId') || 'lost' : 'na';
    }

    args.forEach(arg => {
      if (addedCorr) return;
      if (typeof arg === 'object') {
        arg.corrId = corrId;
        addedCorr = true;
      }
    });
    if (!addedCorr) {
      args.unshift({
        corrId,
      });
    }

    oldLevel.apply(log, args);
  };
});

module.exports = log;
