const glob = require('glob');
const path = require('path');
const logger = require('boring-logger')

/**
 * Require all the files / folders
 * as modules in the given directory. 
 * 
 * Then the required module will be invoked
 * where the remaining arguments are passed 
 * as parameters uniformly to each module. 
 * 
 * Each module is expexted to return a function
 * to be exectued where the return function must 
 * return a promise 
 * 
 * @param {path to directory} directory 
 * @param  {...any} args 
 */
module.exports = async function requireAll(directory, ...args) {

  return new Promise((resolve, reject) => {

    logger.info('Requring all modules in directory: '+ directory);
    glob(directory + '/*', function(err, files) {
      if (err) return reject(err);

      const promiseList = files.map(async function(file) {
        let ret = require(file).apply(null, args)
        if (!(ret instanceof Promise)) {
          // wrap in a promise that is immediately resolved
          return new Promise((resolve, reject) => resolve(ret));
        }
        return ret
      });

      Promise.all(promiseList).then(results => { 
        resolve(results.reduce(function(prev, val, index) {
          let basename = path.basename(files[index], '.js');
          prev[basename] = val;
          return prev;
        }, {}))
      }, reject);
    })

  });

  
}